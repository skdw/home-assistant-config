# Define state-based template entities
- sensor:
    - name: "Media source"
      unique_id: "media_source"
      icon: "mdi:multimedia"
      variables:
        radio_net_stations: !include ../entities/media_radio_net_stations.yaml
        radio_net_stations_urls: "{{ radio_net_stations | map(attribute='url') | list }}"
      state: >
        {% set src = state_attr('media_player.pioneer_onkyo', 'source') %}
        {% set dlna_src = state_attr('media_player.pioneer_dlna', 'media_content_id') %}
        {% if (src == "Network" and dlna_src == "spotify://") %}  {{ "Spotify" }}
        {% elif (src == "Network" and dlna_src == "airplay://") %}  {{ "Airplay" }}
        {% elif (src == "Network" and dlna_src in radio_net_stations_urls) %}
          {{ radio_net_stations | selectattr('url', 'eq', dlna_src) | map(attribute='name') | first }}
        {% elif (src == "Network") %}  {{ dlna_src }}
        {% elif (src == "Google TV"  and state_attr('media_player.chromecast_google_tv', 'app_name') is not none) %}
          {{ state_attr('media_player.chromecast_google_tv', 'app_name') }}
        {% elif (src is not none) %} {{ src }}
        {% else %} {{ "" }}
        {% endif %}
    - name: "Media title"
      unique_id: "media_title"
      icon: "mdi:music"
      state: >
        {% set src = state_attr('media_player.pioneer_onkyo', 'source') %}
        {% if (src == "Google TV" and state_attr('media_player.chromecast_google_tv', 'media_title') is not none) %}
          {{ state_attr('media_player.chromecast_google_tv', 'media_title') }}
        {% elif(src == "Radio FM") %}
          {{ states('input_select.radio_fm') }}
        {% else %} {{ state_attr('media_player.pioneer_onkyo', 'media_title') }}
        {% endif %}
    - name: "Media album"
      unique_id: "media_album"
      icon: "mdi:album"
      state: >
        {% set src = state_attr('media_player.pioneer_onkyo', 'source') %}
        {% if (src == "Google TV" and state_attr('media_player.chromecast_google_tv', 'media_album_name') is not none) %}
          {{ state_attr('media_player.chromecast_google_tv', 'media_album_name') }}
        {% else %} {{ state_attr('media_player.pioneer_onkyo', 'media_album_name') }}
        {% endif %}
    - name: "Media artist"
      unique_id: "media_artist"
      icon: "mdi:account-music"
      state: >
        {% set src = state_attr('media_player.pioneer_onkyo', 'source') %}
        {% if (src == "Google TV" and state_attr('media_player.chromecast_google_tv', 'media_artist') is not none) %}
          {{ state_attr('media_player.chromecast_google_tv', 'media_artist') }}
        {% else %} {{ state_attr('media_player.pioneer_onkyo', 'media_artist') }}
        {% endif %}
    - name: "Volume Pioneer"
      unit_of_measurement: "dB"
      device_class: "sound_pressure"
      unique_id: "volume_pioneer"
      icon: "mdi:volume-high"
      state: >
        {%- from 'templates.jinja' import volume_to_db -%}
        {{ volume_to_db(state_attr('media_player.pioneer_onkyo', 'volume_level')) }}
    - name: "Volume Bathroom"
      unit_of_measurement: "dB"
      device_class: "sound_pressure"
      unique_id: "volume_pioneer_zone_2"
      icon: "mdi:volume-high"
      state: >
        {%- from 'templates.jinja' import volume_to_db -%}
        {{ volume_to_db(state_attr('media_player.pioneer_onkyo_zone_2)', 'volume_level')) }}
    - name: "Volume Bedroom"
      unit_of_measurement: "dB"
      device_class: "sound_pressure"
      unique_id: "volume_pioneer_zone_3"
      icon: "mdi:volume-high"
      state: >
        {%- from 'templates.jinja' import volume_to_db -%}
        {{ volume_to_db(state_attr('media_player.pioneer_onkyo_zone_3', 'volume_level')) }}
    - name: "Listening mode"
      state: >
        {% set attr = state_attr('media_player.pioneer_onkyo', 'audio_information') %}
        {% if(attr is not none and 'listening_mode' in attr) %} {{ attr['listening_mode'] }}
        {% else %} {{ "" }}
        {% endif %}
    - name: "Input channels"
      state: >
        {% set attr = state_attr('media_player.pioneer_onkyo', 'audio_information') %}
        {% if(attr is not none and 'input_channels' in attr) %} {{ attr['input_channels'] }}
        {% else %} {{ "" }}
        {% endif %}
    - name: "Output channels"
      state: >
        {% set attr = state_attr('media_player.pioneer_onkyo', 'audio_information') %}
        {% if(attr is not none and 'output_channels' in attr) %} {{ attr['output_channels'] }}
        {% else %} {{ "" }}
        {% endif %}
    - name: "Fan audio cabinet - auto value"
      unique_id: "fan_audio_cabinet_auto_value"
      state: >
        {% set power = states('sensor.outlet_audio_cabinet_power') | float(0) %}
        {% set temp = states('sensor.audio_cabinet_temperature') | float(0) %}
        {% set percentage_by_power = power * 0.5 %}
        {% set percentage_by_temp = temp * 5.0 - 125 %}
        {% set percentage_max = [percentage_by_power, percentage_by_temp] | max %}
        {% if percentage_max < 30 %}
          0
        {% else %}
          {{ [percentage_max, 100] | min }}
        {% endif %}
      unit_of_measurement: '%'
- binary_sensor:
  - name: "Home active"
    unique_id: "home_active"
    device_class: "presence"
    icon: 'mdi:human'
    state: >
      {{ states('counter.switches_enabled') | int > 0 }}
  - name: "PC is active"
    unique_id: "pc_is_active"
    device_class: "power"
    state: >
      {{ states('sensor.pc_cpuload') != 'unavailable' and (now() - states.sensor.pc_cpuload.last_changed).total_seconds() < 1000 }}
  - name: "Shower"
    unique_id: "shower"
    device_class: "occupancy"
    icon: "mdi:shower-head"
    state: >
      {% if states('sensor.shower_humidity_derivative') | float(0) > 6 %}
        on
      {% elif states('sensor.shower_humidity_derivative') | float(0) < -1 %}
        off
      {% else %}
        {{ this.state }}
      {% endif %}
- switch:
  - name: "Projector"
    unique_id: "projector"
    state: "{{ is_state('binary_sensor.projector_power', 'on') }}"
    turn_on:
      action: script.projector_turn_on
    turn_off:
      action: script.projector_turn_off
# Define trigger-based template entities
- triggers:
  - trigger: state
    entity_id:
      - vacuum.s7
    from: cleaning
    to: returning
  variables:
    area: "{{ states('input_select.areas') | lower | replace(' ', '_') }}"
    current_time: >
      {% if trigger is defined %}
        {{ now() }}
      {% else %}
        Never
      {% endif %}
  sensor:
    - name: "Vacuum Cleaner Last Active"
      state: "{{ current_time }}"
      attributes:
        living_room: >
          {% if area == 'living_room' %}
            {{ current_time }}
          {% else %}
            {{ this.attributes.living_room | default('Never') }}
          {% endif %}
        kitchen: >
          {% if area == 'kitchen' %}
            {{ current_time }}
          {% else %}
            {{ this.attributes.kitchen | default('Never') }}
          {% endif %}
        bedroom: >
          {% if area == 'bedroom' %}
            {{ current_time }}
          {% else %}
            {{ this.attributes.bedroom | default('Never') }}
          {% endif %}
        wardrobe: >
          {% if area == 'wardrobe' %}
            {{ current_time }}
          {% else %}
            {{ this.attributes.wardrobe | default('Never') }}
          {% endif %}
        hall: >
          {% if area == 'hall' %}
            {{ current_time }}
          {% else %}
            {{ this.attributes.hall | default('Never') }}
          {% endif %}
        bathroom: >
          {% if area == 'bathroom' %}
            {{ current_time }}
          {% else %}
            {{ this.attributes.bathroom | default('Never') }}
          {% endif %}
- triggers:
  - trigger: state
    entity_id:
      - input_datetime.remote_last_button_press
      - input_number.remote_menu_level
      - input_number.remote_submenu_selection
      - sensor.volume_pioneer
      - sensor.media_title
      - media_player.pioneer
    to: # ignore attribute changes
  variables:
    remote: !include ../entities/remote.yaml
    current_menu_level: "{{ states('input_number.remote_menu_level') | int }}"
    current_submenu_selection: "{{ states('input_number.remote_submenu_selection') | int }}"
  sensor:
    - name: "Remote Menu Line 1"
      state: "{{ remote[current_menu_level]['menu_name'] }}"
    - name: "Remote Menu Line 2"
      state: >
        {% set current_submenu = remote[current_menu_level]['submenu'][current_submenu_selection]  %}
        {% if 'name' in current_submenu %}
          {{ current_submenu['name'] }}
        {% else %}
          {{ "" }}
        {% endif %}
    - name: "Remote Menu Line 3"
      state: >
        {% set current_submenu = remote[current_menu_level]['submenu'][current_submenu_selection]  %}
        {% if 'line3' in current_submenu %}
          {{ current_submenu['line3'] }}
        {% else %}
          {{ "" }}
        {% endif %}
    - name: "Remote Menu Line 4"
      state: >
        {% set current_submenu = remote[current_menu_level]['submenu'][current_submenu_selection]  %}
        {% if 'line4' in current_submenu %}
          {{ current_submenu['line4'] }}
        {% else %}
          {{ "" }}
        {% endif %}
    - name: "Remote Menu Line 5"
      state: >
        {% set current_submenu = remote[current_menu_level]['submenu'][current_submenu_selection]  %}
        {% if 'line5' in current_submenu %}
          {{ current_submenu['line5'] }}
        {% else %}
          {{ "" }}
        {% endif %}
